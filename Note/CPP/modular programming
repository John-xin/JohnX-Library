模块化编程思想
模块指的是多文件编程，一个源文件加对应的头文件构成一个模块。一个模块可以被另一个模块调用，形成多模块编程。
使得编程被细分，独立，体现在多人分工，分模块编译。

构成要素
头源分离。头文件声明变量，函数，类。源文件定义与实现。
分块编译，执行时块块链接。优化编译效率。

原则
变量可声明多次，定义一次。分配内存为定义，不分配为声明。

原则应用
头文件中 - 变量
要被其他模块使用的变量，在应用时变量前加extern字样，就表示为变量声明，该变量被多个模块调用时就合法，否则就出现多重定义错误。

头文件中 - 函数
函数在应用时，其默认函数前加extern字样。

与extern相对立的是static，前加static的变量或函数，只对当下模块有效，不可被其他模块调用。

声明，定义和初始化的关系
int a; //定义
extern int a; //声明
a=1; //初始化
extern int a = 1; //定义加初始化
要点：分配内存空间的是定义，不分配的是声明。

头文件用法
首先搞清楚变量和函数是否被其他模块调用。
可使用const，static，extern，inline 修饰



