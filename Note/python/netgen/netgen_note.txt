import netgen.gui
from netgen.meshing import *

#create empty mesh
##method 1
m = Mesh(dim=1) 
##method 2
m = Mesh()
m.dim = 2

#add meshPoint into the empty mesh and define an array to store the PointId

##Pnt(i/N, 0, 0) returns netgen.libngpy._meshing.Point3d
##MeshPoint(Pnt(i/N, 0, 0)) returns netgen.libngpy._meshing.MeshPoint:(x,y,z)
##The function m.Add(MeshPoint(Pnt())) returns netgen.libngpy._meshing.PointId

pnums = []
for i in range(0, N+1):
    pnums.append (m.Add (MeshPoint (Pnt(i/N, 0, 0))))

type(pnums[0]) #print: netgen.libngpy._meshing.PointId

#loop over the array of PointIds and add mesh elements into the mesh
##The function m.AddRegion() returns integer indicating a BoundaryCondition label
idx = m.AddRegion("material", dim=1) #1D BC label
idx_left = m.AddRegion("left", dim=0) #0D BC label
idx_right = m.AddRegion("right", dim=0) #0D BC label

##create mesh elements using PointIds and add them into the mesh
for i in range(0,N):
    ##create a mesh element using PointIds and BC label
    m.Add (Element1D ([pnums[i],pnums[i+1]], index=idx))

m.Add (Element0D (pnums[0], index=idx_left))
m.Add (Element0D (pnums[N], index=idx_right))


#0D/1D/2D mesh element can be generated by PointId mannually
m.Add (Element0D (pnums[0], index=idx_left))
m.Add (Element1D ([pnums[i],pnums[i+1]], index=idx))
m.Add(Element2D([pnums[0],pnums[1], pnums[2], pnums[3]],index=idx_dom))
for e in m1.Elements2D():
    m.Add(Element2D (fd_outside, [pmap1[v] for v in e.vertices]))

#display the mesh
Draw(mesh)

#generate 3D mesh
##3D mesh can be generated automatically after setting up 2D mesh elements - m.GenerateVolumeMesh()
fd_outside = m.Add (FaceDescriptor(bc=1,domin=1,surfnr=1))

pmap1 = { }
for e in m1.Elements2D(): #e:netgen.libngpy._meshing.Element2D
    for v in e.vertices: # v:netgen.libngpy._meshing.PointId
        if (v not in pmap1):
            pmap1[v] = ngmesh.Add (m1[v])

m1.Elements2D() returns list of 2D mesh element - each element: e
e.vertices returns list of verices' PointIds - each PointId: v
m1[v] returns netgen.libngpy._meshing.MeshPoint:(x,y,z)

for e in m1.Elements2D():
    ngmesh.Add (Element2D (fd_outside, [pmap1[v] for v in e.vertices]))

ngmesh.GenerateVolumeMesh()